version: '3.8'

services:
  # Echo servers representing different geographic regions
  web1:
    image: ealen/echo-server
    container_name: web1
    environment:
      - ECHO_SERVER_TEXT=Hello from US West (California) - Low Carbon Server
    networks:
      - greencdn_network
    ports:
      - "8001:80"

  web2:
    image: ealen/echo-server
    container_name: web2
    environment:
      - ECHO_SERVER_TEXT=Hello from US Central (Texas) - Moderate Carbon Server
    networks:
      - greencdn_network
    ports:
      - "8002:80"

  web3:
    image: ealen/echo-server
    container_name: web3
    environment:
      - ECHO_SERVER_TEXT=Hello from US East (Mid-Atlantic) - Higher Carbon Server
    networks:
      - greencdn_network
    ports:
      - "8003:80"

  # HAProxy load balancer with dataplane API and stats dashboard
  haproxy:
    image: "haproxytech/haproxy-ubuntu:2.5"
    container_name: haproxy
    volumes:
      - "./haproxy:/usr/local/etc/haproxy/"
    ports:
      - "80:80"        # Main HTTP traffic
      - "5555:5555"    # Dataplane API
      - "8404:8404"    # Stats dashboard
    networks:
      - greencdn_network
    depends_on:
      - web1
      - web2
      - web3

  # Flask weight manager dashboard
  weight-manager:
    build:
      context: .
      dockerfile: Dockerfile.manager
    container_name: weight-manager
    ports:
      - "5000:5000"
    volumes:
      - ".:/app"
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - greencdn_network
    depends_on:
      - haproxy

  # Flask weight viewer (shows highest weight server)
  weight-viewer:
    build:
      context: .
      dockerfile: Dockerfile.viewer
    container_name: weight-viewer
    ports:
      - "5001:5001"
    volumes:
      - ".:/app"
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - greencdn_network
    depends_on:
      - haproxy
      - weight-manager

  # Experiment
  calculator:
    build:
      context: .
      dockerfile: Dockerfile.calculator
    container_name: calculator
    ports:
      - "5002:5002"
    volumes:
      - ".:/app"
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - greencdn_network
    depends_on:
      - haproxy
      - weight-manager

  # Carbon controller (continuous weight updates)
  carbon-controller:
    build:
      context: .
      dockerfile: Dockerfile.carbon
    container_name: carbon-controller
    volumes:
      - ".:/app"
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - greencdn_network
    depends_on:
      - haproxy
    restart: unless-stopped

networks:
  greencdn_network:
    driver: bridge